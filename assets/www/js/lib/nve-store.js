// Generated by CoffeeScript 1.3.1
var NveStore;

NveStore = (function() {
  var m_avalancheDangerObs, m_incident, m_isLoggedIn, m_pictures, m_snowStore, m_waterStore, send;

  NveStore.name = 'NveStore';

  function NveStore() {}

  send = new NveSend;

  m_isLoggedIn = false;

  m_avalancheDangerObs = [];

  m_incident = null;

  m_pictures = [];

  m_waterStore = null;

  m_snowStore = null;

  NveStore.prototype.login = function(userName, userPassword) {
    return send.login(userName, userPassword, this.loginCallback);
  };

  NveStore.prototype.loginCallback = function(data) {
    main.loginCallback(data);
    return m_isLoggedIn = true;
  };

  NveStore.prototype.isLoggedIn = function() {
    return m_isLoggedIn;
  };

  NveStore.prototype.loggedInAs = function(callback) {
    return send.loggedInAs(callback);
  };

  NveStore.prototype.getSnow = function() {
    if (m_snowStore) {
      return m_snowStore;
    } else {
      return m_snowStore = new SnowStore();
    }
  };

  NveStore.prototype.sendSnow = function(callback) {
    if (m_snowStore) {
      m_snowStore.send();
      m_snowStore = null;
    }
    if (callback) {
      return callback();
    }
  };

  NveStore.prototype.getWater = function() {
    if (m_waterStore) {
      return m_waterStore;
    } else {
      m_waterStore = new WaterStore();
      return m_waterStore;
    }
  };

  NveStore.prototype.sendWater = function(callback) {
    if (m_waterStore) {
      m_waterStore.send();
      m_waterStore = null;
    }
    if (callback) {
      return callback();
    }
  };

  NveStore.prototype.addObservation = function(obs) {
    return m_observations.push(obs);
  };

  NveStore.prototype.addAvalancheDangerObs = function(avaObs) {
    return m_avalancheDangerObs.push(avaObs);
  };

  NveStore.prototype.addPicture = function(picture) {
    return m_pictures.push(picture);
  };

  NveStore.prototype.getPictures = function() {
    return m_pictures;
  };

  NveStore.prototype.addIncident = function(incident) {
    return m_incident = incident;
  };

  NveStore.prototype.getIncident = function() {
    return m_incident;
  };

  NveStore.prototype.getObservations = function() {
    return m_observations;
  };

  NveStore.prototype.addRegistration = function(registration, callback) {
    return send.addRegistration(registration, callback);
  };

  /*
  	getDangerSign: (callback) ->
  		send.getDangerSign(callback)
  */


  NveStore.prototype.getObjectFromServer = function(call, callback) {
    return send.getObjectFromServer(call, callback);
  };

  NveStore.prototype.sendAll = function() {
    var location;
    if (main.login === null || main.login.data === null) {
      alert('login');
      return;
    }
    location = new ObsLocation($("position_header_town").innerHTML, 33, snow_page.longitude, snow_page.latitute, 0, 0, 0, 250, 250, false, null, new Date());
    return send.sendObjectToServer(location, this.zweiter);
  };

  NveStore.prototype.zweiter = function(data) {
    var registration;
    registration = new Registration(main.login.data.ObserverID, data.ObsLocationID, new Date(), new Date(), 0);
    return send.sendObjectToServer(registration, main.store.calli);
  };

  NveStore.prototype.sendObjectToServer = function(obj, callback) {
    return this.send.sendObjectToServer(obj, callback);
  };

  NveStore.prototype.calli = function(data) {
    var i, obs, picture, _fn, _fn1, _i, _j, _len, _len1;
    i = 0;
    _fn = function(obs) {
      obs.RegID = data.RegID;
      obs.AvalancheDangerObsID = i++;
      return send.sendObjectToServer(obs, main.store.p);
    };
    for (_i = 0, _len = m_avalancheDangerObs.length; _i < _len; _i++) {
      obs = m_avalancheDangerObs[_i];
      _fn(obs);
    }
    m_avalancheDangerObs.length = 0;
    if (m_incident) {
      m_incident.RegID = data.RegID;
      send.sendObjectToServer(m_incident, main.store.p);
      m_incident = null;
    }
    i = 0;
    _fn1 = function(picture) {
      picture.RegID = data.RegID;
      picture.PictureID = i++;
      return send.sendObjectToServer(picture, main.store.p);
    };
    for (_j = 0, _len1 = m_pictures.length; _j < _len1; _j++) {
      picture = m_pictures[_j];
      _fn1(picture);
    }
    m_pictures.length = 0;
    snow_picture.afterSendRegistration();
    snow_hendelse.afterSendRegistration();
    snow_page.afterSendRegistration();
    return alert('Takk for observasjon');
  };

  NveStore.prototype.p = function(data) {};

  return NveStore;

})();
