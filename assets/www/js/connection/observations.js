// Generated by CoffeeScript 1.3.3
var FullViewRenderer, ObservationFetcher, ObservationView, ObservationViewRendrer,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ObservationView = (function() {

  function ObservationView(author, updated, url, content) {
    this.author = author;
    this.updated = updated;
    this.url = url;
    this.content = content;
  }

  return ObservationView;

})();

ObservationFetcher = (function() {

  function ObservationFetcher() {
    this.getObservations = __bind(this.getObservations, this);

  }

  ObservationFetcher.prototype.getObservations = function(callback) {
    return jQuery.ajax({
      type: "GET",
      url: "http://h-web01.nve.no/stage_regobsservices/Atom/AllRegistrationsV?$filter=LangKey%20eq%201%20and%20UTMEast%20gt%20240000%20and%20UTMEast%20lt%20250000%20and%20UTMNorth%20le%206660000%20and%20UTMNorth%20gt%206650000&$orderby=RegID%20desc",
      dataType: "text",
      success: this.fetchedDataHandler(callback)
    });
  };

  ObservationFetcher.prototype.fetchedDataHandler = function(callback) {
    var _this = this;
    return function(data) {
      var obs, xml;
      xml = jQuery.parseXML(data);
      obs = _this.entryToObservationView(jQuery(xml).find("entry"));
      return callback(obs);
    };
  };

  ObservationFetcher.prototype.entryToObservationView = function(entrys) {
    return jQuery.map(entrys, function(e) {
      var author, content, entry, updated, url;
      entry = jQuery(e);
      author = entry.find("author").text().trim();
      updated = entry.find("updated").text().trim();
      url = entry.find("link").attr("href");
      content = entry.find("title").text().trim();
      return new ObservationView(author, updated, url, content);
    });
  };

  return ObservationFetcher;

})();

FullViewRenderer = (function() {

  function FullViewRenderer(domNode, url) {
    this.domNode = domNode;
    this.url = url;
  }

  FullViewRenderer.prototype.render = function() {
    return jQuery(this.domNode).html(Handlebars.templates.fullView({
      url: this.url
    }));
  };

  FullViewRenderer.prototype.setUrl = function(url) {
    this.url = url;
  };

  return FullViewRenderer;

})();

ObservationViewRendrer = (function() {

  function ObservationViewRendrer(domNode, listOfView) {
    this.domNode = domNode;
    this.listOfView = listOfView;
  }

  ObservationViewRendrer.prototype.render = function() {
    jQuery(this.domNode).html("");
    jQuery(this.domNode).html(Handlebars.templates.viewList({
      list: this.listOfView
    }));
    main.resetHeights();
    return jQuery(this.domNode).find("li").click(function() {
      var url;
      url = jQuery(this).attr("data-url");
      return navigator.app.loadUrl(url, {
        openExternal: true
      });
    });
  };

  ObservationViewRendrer.prototype.setListOfView = function(listOfView) {
    this.listOfView = listOfView;
  };

  return ObservationViewRendrer;

})();
