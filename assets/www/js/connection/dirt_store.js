// Generated by CoffeeScript 1.3.1
var DirtStore;

DirtStore = (function() {

  DirtStore.name = 'DirtStore';

  function DirtStore() {
    this.m_incident = null;
    this.m_pictures = [];
  }

  DirtStore.prototype.setIncident = function(incident) {
    this.m_incident = incident;
    return DataAccess.save(DirtStore.name, this);
  };

  DirtStore.prototype.getIncident = function() {
    return this.m_incident;
  };

  DirtStore.prototype.addPicture = function(picture) {
    this.m_pictures.push(picture);
    return DataAccess.save(DirtStore.name, this);
  };

  DirtStore.prototype.getPictures = function() {
    return this.m_pictures;
  };

  DirtStore.prototype.send = function() {
    var elapsedInMinutes, location, pos, source,
      _this = this;
    source = 0;
    pos = dirt_page.pos_obj;
    if (pos) {
      elapsedInMinutes = ((new Date()).getTime() - pos.taken.getTime()) / 1000 / 60;
      if (elapsedInMinutes < GPS_TIMEOUT_IN_MINUTES) {
        source = GPS_POSITION;
      } else {
        source = OLD_GPS_POSITION;
      }
    }
    location = new ObsLocation($("dirt_position_header_town").innerHTML, 33, dirt_page.longitude, dirt_page.latitute, source, 0, 0, 250, 250, false, null, new Date());
    return SendObjectToServer(location, function(data) {
      return _this.afterLocation(data);
    });
  };

  DirtStore.prototype.afterLocation = function(data) {
    var registration,
      _this = this;
    registration = new Registration(main.login.data.ObserverID, data.ObsLocationID, null, new Date(), 0);
    return SendObjectToServer(registration, function(data) {
      return _this.afterRegistration(data);
    });
  };

  DirtStore.prototype.afterRegistration = function(data) {
    var i, picture, _fn, _i, _len, _ref;
    if (this.m_incident) {
      this.m_incident.RegID = data.RegID;
      SendObjectToServer(this.m_incident);
      this.m_incident = null;
    }
    i = 0;
    _ref = this.m_pictures;
    _fn = function(picture) {
      picture.RegID = data.RegID;
      picture.PictureID = i++;
      return SendObjectToServer(picture);
    };
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      picture = _ref[_i];
      _fn(picture);
    }
    this.m_pictures.length = 0;
    dirt_picture.afterSendRegistration();
    dirt_hendelse.afterSendRegistration();
    dirt_page.afterSendRegistration();
    DataAccess.save(DirtStore.name, this);
    return alert('Takk for observasjon');
  };

  return DirtStore;

})();
