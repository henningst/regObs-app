// Generated by CoffeeScript 1.3.1
var NveStore;

NveStore = (function() {

  NveStore.name = 'NveStore';

  function NveStore() {
    this.m_waterStore = null;
    this.m_snowStore = null;
    this.m_dirtStore = null;
    this.m_iceStore = null;
    this.m_isLoggedIn = false;
    this.m_send = new NveSend();
  }

  NveStore.prototype.login = function(userName, userPassword) {
    return this.m_send.login(userName, userPassword, this.loginCallback);
  };

  NveStore.prototype.logout = function(callback) {
    return this.m_send.logout(callback);
  };

  NveStore.prototype.loginCallback = function(data) {
    main.loginCallback(data);
    return this.m_isLoggedIn = true;
  };

  NveStore.prototype.isLoggedIn = function() {
    return this.m_isLoggedIn;
  };

  NveStore.prototype.loggedInAs = function(callback) {
    return this.m_send.loggedInAs(callback);
  };

  NveStore.prototype.getSnow = function() {
    if (this.m_snowStore) {
      return this.m_snowStore;
    } else {
      this.m_snowStore = DataAccess.get(SnowStore.name, new SnowStore());
      if (this.m_snowStore) {
        return this.m_snowStore;
      } else {
        return this.m_snowStore = new SnowStore();
      }
    }
  };

  NveStore.prototype.sendSnow = function(callback) {
    if (this.m_snowStore) {
      this.m_snowStore.send();
    }
    if (callback) {
      return callback();
    }
  };

  NveStore.prototype.getDirt = function() {
    if (this.m_dirtStore) {
      return this.m_dirtStore;
    } else {
      this.m_dirtStore = DataAccess.get(DirtStore.name, new DirtStore());
      if (this.m_dirtStore) {
        return this.m_dirtStore;
      } else {
        return this.m_dirtStore = new DirtStore();
      }
    }
  };

  NveStore.prototype.sendDirt = function(callback) {
    if (this.m_dirtStore) {
      this.m_dirtStore.send();
    }
    if (callback) {
      return callback();
    }
  };

  NveStore.prototype.getIce = function() {
    if (this.m_iceStore) {
      return this.m_iceStore;
    } else {
      this.m_iceStore = DataAccess.get(IceStore.name, new IceStore());
      if (this.m_iceStore) {
        return this.m_iceStore;
      } else {
        return this.m_iceStore = new IceStore();
      }
    }
  };

  NveStore.prototype.sendIce = function(callback) {
    if (this.m_iceStore) {
      this.m_iceStore.send();
    }
    if (callback) {
      return callback();
    }
  };

  NveStore.prototype.getWater = function() {
    if (this.m_waterStore) {
      return this.m_waterStore;
    } else {
      this.m_waterStore = DataAccess.get(WaterStore.name, new WaterStore());
      if (this.m_waterStore) {
        return this.m_waterStore;
      } else {
        return this.m_waterStore = new WaterStore();
      }
    }
  };

  NveStore.prototype.sendWater = function(callback) {
    if (this.m_waterStore) {
      this.m_waterStore.send();
    }
    if (callback) {
      return callback();
    }
  };

  return NveStore;

})();
